
- name: create ks path
  sudo: yes
  action: file state=directory path=/var/www/html/ks/{{ inventory_hostname }}/
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: config template kickstart
  sudo: yes
  action: template src=ks.conf dest=/var/www/html/ks/{{ inventory_hostname }}/ks.conf
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: config template cloud.cfg
  sudo: yes
  action: template src=cloud.cfg dest=/var/www/html/ks/{{ inventory_hostname }}/cloud.cfg
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: config cc_runcmd.py
  sudo: yes
  action: template src=cc_runcmd.py dest=/var/www/html/ks/{{ inventory_hostname }}/cc_runcmd.py
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

# Later we need a way to get the macaddr of the ovirt host.
# This way we can do per host config

- name: Remove the existing VM scratch template
  local_action: ovirt
    state=absent
    instance_name={{ inventory_hostname }}
    user={{ ovirt_admin_username }}
    password='{{ ovirt_admin_password }}'
    url={{ ovirt_engine }}
    region={{ ovirt_dc }}
    zone={{ ovirt_cluster }}

- name: Ensure VM exists
  local_action: ovirt
    state=present
    instance_name={{ inventory_hostname }}
    user={{ ovirt_admin_username }}
    password="{{ ovirt_admin_password }}"
    url={{ ovirt_engine }}
    resource_type=template
    instance_type=server
    image=blank_pxe
    poll_timeout=3600
    region={{ ovirt_dc }}
    zone={{ ovirt_cluster }}
    sdomain={{ ovirt_sdomain }}
    wait_for_state=down
    #gather_facts=true
  register: ovirt_guest_data

- name: Debug
  debug: msg="{{ ovirt_guest_data.instance_data }}"


- name: config tftp menu
  sudo: yes
  action: template src=default dest=/var/lib/tftpboot/pxelinux.cfg/01-{{ item.machyphen }}
  delegate_to: "{{ groups.deployment_servers[0] }}"
  with_items: ovirt_guest_data.instance_data['ovirt_guest_nics']

# This will PXE boot, build and STOP the instance
- name: ovirt launch instance
  local_action: ovirt
    state=started
    instance_name={{ inventory_hostname }}
    user={{ ovirt_admin_username }}
    password="{{ ovirt_admin_password }}"
    url={{ ovirt_engine }}
    wait_for_state=down
    poll_timeout=14400

# Some how wait til it's done then remove the ks?


