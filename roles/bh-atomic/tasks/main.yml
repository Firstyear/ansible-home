
### ADD rdiff-backup

## rpm-ostree initramfs --enable

#- name: Install server atomic software
#  become: yes
#  command: rpm-ostree install amanda-client nmap vim zsh
#  when: "ansible_virtualization_role == 'guest' and 'linode_servers' not in group_names"

# rpm-ostree install libselinux-python policycoreutils-python amanda-client
# openldap-clients yubico-piv-tool
# opensc rpm-build zsh
# git vim vim-nerdtree rpm-fusion (with local repo)

### evolution shotwell dconf-editor gnome-tweak-tool 

# Maybe opensc?

# Remove rhgb from /etc/default/grub

# LayeredPackages: amanda-client b43-fw coolkey createrepo dconf-editor evolution git gnome-tweak-tool libselinux-python openldap-clients opensc policycoreutils-python rpm-build rpmfusion-free-release rpmfusion-nonfree-release shotwell vim vim-nerdtree yubico-piv-tool zsh python3-docker

- name: Fix SUSE admin groups
  become: yes
  user: name=admin groups=wheel append=yes

- name: sysctl for atomic hosts
  template: src=base/sysctl/{{ item }} dest=/etc/sysctl.d/{{ item }} owner=root group=root mode=0644
  become: yes
  with_items:
    - 01-uofa.conf

- name: Configure SUSE auth packages
  become: yes
  ignore_errors: yes
  action: zypper name={{ item }} state=present
  with_items:
    - sssd
    - sssd-ad
    - sssd-ldap
    - sssd-tools
    - zsh
    - pcsc-lite
    - opensc
    - coolkey
  when: "ansible_os_family == 'Suse'"

- name: Configure secure LDAP configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0600
  with_items:
    - sssd/sssd.conf
    - sudoers.d/bh_admins-sudo

- name: Touch preauth avail
  become: yes
  file: state=touch mode=0644 path=/var/lib/sss/pubconf/pam_preauth_available

- name: Ensure tls/certs directory
  become: yes
  file: state=directory mode=0755 path=/etc/pki/tls/certs owner=root group=root

- name: Configure hostname
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - hostname
  when: "inventory_hostname != 'localhost'"

- name: Ensure services disabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=no
  with_items:
    - nfs-client.target
    - certmonger
    - ntpd
    - nscd

- name: Deploy docker daemon configuration
  become: yes
  ignore_errors: yes
  template: src=base/docker/daemon.json dest=/etc//docker/daemon.json owner=root group=root mode=0644

- name: Ensure services enabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=yes
  with_items:
    - sssd
    - sshd
    - docker
    - chronyd

- name: Configure Fedora AUTH configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - pki/tls/certs/bh_ldap.crt
    - pam.d/password-auth-ac
    - pam.d/system-auth-ac
    - ssh/sshd_config
    - openldap/ldap.conf
  when: "ansible_os_family != 'Suse'"

- name: Fix SUSE sudoers
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0400
  with_items:
    - sudoers
  when: "ansible_os_family == 'Suse'"

- name: Configure SUSE AUTH configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    # Need to mkdir this?
    - pki/tls/certs/bh_ldap.crt
    - pam.d/common-account-pc
    - pam.d/common-auth-pc
    - pam.d/common-password-pc
    - pam.d/common-session-pc
    - ssh/sshd_config
    - openldap/ldap.conf
    - nsswitch.conf
    - nscd.conf
  when: "ansible_os_family == 'Suse'"

- name: Configure default masks
  become: yes
  ignore_errors: yes
  acl: path={{ item }} etype=mask permissions=rwx state=present recursive=yes default=yes
  with_items: '{{ acl_locations }}'

- name: Configure masks
  become: yes
  ignore_errors: yes
  acl: path={{ item }} etype=mask permissions=rwx state=present recursive=yes
  with_items: '{{ acl_locations }}'

- name: Configure default acl for backups to operate
  become: yes
  ignore_errors: yes
  acl: path={{ item }} entity=backup etype=user permissions=rx state=present recursive=yes default=yes
  with_items: '{{ acl_locations }}'

- name: Configure acl for backups to operate
  become: yes
  ignore_errors: yes
  acl: path={{ item }} entity=backup etype=user permissions=rx state=present recursive=yes
  with_items: '{{ acl_locations }}'

# /usr/libexec/sssd/p11_child --pre --nssdb=/etc/pki/nssdb 
# to check certs.
# Add cert to db?
# You need coolkey installed (I think ...)

# certutil -A -d /etc/pki/nssdb -i /etc/pki/tls/certs/bh_ldap.crt -n BH_LDAP_CA -t "CT,,"

# modutil modutil -dbdir /etc/pki/nssdb -add "My PKCS#11 modules" -libfile libmypkcs11.so
# modutil -dbdir /etc/pki/nssdb -add "coolkey" -libfile /usr/lib64/libcoolkeypk11.so

# semanage permissive -a sssd_t

- name: Server configurations
  include: server.yml
  when: "'workstation' not in group_names and 'htpc' not in group_names"

- name: Suse Workstation
  include: suse-workstation.yml
  when: "ansible_os_family == 'Suse' and 'workstation' in group_names"

- name: Build Containers
  include: container-build.yml
  when: "'workstation' in group_names and 'localhost' in inventory_hostname"

- name: Server Contain Configuration
  include: containers/main.yml
  when: "'workstation' not in group_names and 'htpc' not in group_names"

- name: DNS Slave Deployment
  include: dns-slave.yml
  when: "'dns_slave_servers' in group_names"

- name: Spotinuc
  include: spotinuc.yml
  when: "'htpc' in group_names"

