
- name: Deploy grub serial console changes
  become: yes
  action: template src=libvirt/etc/default/grub dest=/etc/default/grub owner=root group=root mode=644
  notify:
    - rebuild grub2
  when: "ansible_virtualization_role == 'guest' and 'linode_servers' not in group_names"

# Setup the amanda stuff here

# rpm-ostree install libselinux-python policycoreutils-python amanda-client
# openldap-clients yubico-piv-tool
# opensc rpm-build zsh
# git vim vim-nerdtree rpm-fusion (with local repo)

### evolution shotwell dconf-editor gnome-tweak-tool 

# Maybe opensc?

# Remove rhgb from /etc/default/grub

# LayeredPackages: amanda-client b43-fw coolkey createrepo dconf-editor evolution git gnome-tweak-tool libselinux-python openldap-clients opensc policycoreutils-python rpm-build rpmfusion-free-release rpmfusion-nonfree-release shotwell vim vim-nerdtree yubico-piv-tool zsh


- name: Configure amanda service socket
  become: yes
  service: name=amanda.socket enabled=yes state=started
  tags:
    - amanda

- name: Configure Amanda allowed hosts
  become: yes
  template: src=amanda/amandahosts dest=/var/lib/amanda/.amandahosts owner=amandabackup group=disk mode=0600
  tags:
    - amanda

- name: Configure Amanda public key
  become: yes
  template: src=amanda/backup-pubkey.pem dest=/var/lib/amanda/backup-pubkey.pem owner=amandabackup group=disk mode=0600
  tags:
    - amanda

- name: Ensure excludes
  become: yes
  file: path=/var/lib/amanda/exclude state=touch owner=amandabackup group=disk mode=0600
  tags:
    - amanda

- name: Make amanda permissive so we can read all selinux types
  become: yes
  action: selinux_permissive name=amanda_t permissive=true

- name: sysctl for atomic hosts
  template: src=sysctl/{{ item }} dest=/etc/sysctl.d/{{ item }} owner=root group=root mode=0644
  become: yes
  with_items:
    - 01-uofa.conf

- name: sysctl for atomic servers
  template: src=sysctl/{{ item }} dest=/etc/sysctl.d/{{ item }} owner=root group=root mode=0644
  become: yes
  with_items:
    - 02-atomic.conf
  when: "ansible_virtualization_role == 'guest' and 'linode_servers' not in group_names"

- name: static network for atomic hosts
  template: src=scripts/{{ item }} dest=/root/{{ item }} owner=root group=root mode=0750
  become: yes
  with_items:
    - network.sh
    - docker-post.sh
  notify:
    - run network.sh
    - run docker-post.sh
  when: "ansible_virtualization_role == 'guest' and 'linode_servers' not in group_names"

- name: Configure secure LDAP configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0600
  with_items:
    - sssd/sssd.conf
    - sudoers.d/bh_admins-sudo

## #ADD TOUCH /var/lib/sss/pubconf/pam_preauth_available
# /usr/libexec/sssd/p11_child --pre --nssdb=/etc/pki/nssdb 
# to check certs.
# Add cert to db?
# You need coolkey installed (I think ...)

# modutil modutil -dbdir /etc/pki/nssdb -add "My PKCS#11 modules" -libfile libmypkcs11.so

- name: Configure AUTH configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - pki/tls/certs/bh_ldap.crt
    - hostname
    - pam.d/password-auth-ac
    - pam.d/system-auth-ac
    - ssh/sshd_config
    - openldap/ldap.conf

# DO NOT include nsswitch here ....

- name: deploy docker configurations
  become: yes
  action: template src=docker/{{ item }} dest=/etc/sysconfig/{{ item }} owner=root group=root mode=0644
  with_items:
    - docker
    - docker-storage-setup
  when: "ansible_virtualization_role == 'guest' and 'linode_servers' not in group_names"

- name: deploy docker init script
  become: yes
  action: template src=systemd/localdocker@.service dest=/etc/systemd/system/localdocker@.service owner=root group=root mode=0644
  when: "ansible_virtualization_role == 'guest' and 'linode_servers' not in group_names"

- name: Ensure services running
  become: yes
  service: name={{ item }} enabled=yes state=started
  with_items:
    - sssd
    - sshd
    - docker
    - pcscd.socket

# Create the docker ipv6 network for some of our container services.
# Normally we can use the default, but for shells and backups, we need this.

# Ansible docker doesn't support ipv6
#- name: create v6 network
#  become: yes
#  docker_network:
#    name: v6br
#    state: present
#    driver: bridge
#    ipam_options:
#        subnet: 2001:44b8:2155:2c24::/64
#        gateway: 2001:44b8:2155:2c24::1
#        iprange: 2001:44b8:2155:2c24:1::/80

- name: schedule atomic upgrade
  become: yes
  cron:
    name: automatic_atomic_upgrade
    minute: 38
    hour: 7
    weekday: "{{ patch_day }}"
    job: "rpm-ostree upgrade -r"
  when: "ansible_virtualization_role == 'guest' and 'linode_servers' not in group_names"
  # when: "'atomic_master_servers' not in group_names"

