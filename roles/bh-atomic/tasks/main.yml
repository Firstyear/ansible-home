
# certbot --test-cert certonly -m william@blackhats.net.au --manual --preferred-challenges=dns --manual-public-ip-logging-ok --agree-tos -d test-cert.net.blackhats.net.au
# After the DNS challenge is done, then all good to go

- name: Fix SUSE admin groups
  become: yes
  user: name=admin groups=wheel append=yes

- name: Detect if we are transactional SUSE install
  become: yes
  stat: path=/usr/sbin/transactional-update
  register: trans_suse

- name: sysctl for atomic hosts
  template: src=base/sysctl/{{ item }} dest=/etc/sysctl.d/{{ item }} owner=root group=root mode=0644
  become: yes
  with_items:
    - 01-uofa.conf

- name: Configure SUSE packages
  become: yes
  ignore_errors: yes
  zypper:
    name: ['docker', 'zsh', 'ipcalc', 'python3-docker', 'mozilla-nss-tools', 'avahi', 'borgbackup']
    state: present
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists == False"

# Also:
# zypper ar obs://home:firstyear:kanidm home:firstyear:kanidm
# zypper ref
# transactional-update pkg install kanidm-clients kanidm-unixd-clients

- name: Configure Kanidm configuration
  become: yes
  template: src=base/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - kanidm/config
    - kanidm/unixd
  tags:
    - kanidm_client

- name: Configure kanidm unixd service enabled
  become: yes
  service: name=kanidm-unixd enabled=yes state=started
  tags:
    - kanidm_client

- name: Configure secure kanidm configurations
  become: yes
  template: src=base/kanidm/{{ item }} dest=/etc/sudoers.d/{{ item }} owner=root group=root mode=0600
  with_items:
    - net_admins-sudo
  tags:
    - kanidm_client

- name: Configure Kanidm ssh configuration
  become: yes
  template: src=base/kanidm/{{ item }} dest=/etc/ssh/{{ item }} owner=root group=root mode=0644
  with_items:
    - sshd_config
  tags:
    - kanidm_client

- name: Configure Kanidm unixd configuration
  become: yes
  template: src=base/kanidm/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - nsswitch.conf
    - pam.d/common-account-pc
    - pam.d/common-auth-pc
    - pam.d/common-password-pc
    - pam.d/common-session-pc
  tags:
    - kanidm_client

# - name: Configure secure SSSD configurations
#   become: yes
#   template: src=../../templates/auth/sssd/sssd.conf dest=/etc/sssd/sssd.conf owner=root group=root mode=0600

- name: Ensure tls/certs directory
  become: yes
  file: state=directory mode=0755 path=/etc/pki/tls/certs owner=root group=root

- name: Configure hostname
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - hostname
  when: "inventory_hostname != 'localhost'"

- name: Push SSCA script to all hosts
  become: yes
  template: src=../../scripts/ssca.py dest=/root/ssca.py owner=root group=root mode=0755

- name: Push systemd unit files
  become: yes
  template: src=base/systemd/{{ item }} dest=/etc/systemd/system/{{ item }} owner=root group=root mode=0644
  with_items:
    - certbot.service
    - certbot.timer
  notify: daemon-reload
  when: "ansible_os_family != 'Suse'"

- meta: flush_handlers

- name: Ensure services disabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=no
  with_items:
    - nfs-client.target
    - certmonger
    - ntpd
    - nscd
    - firewalld
    # - sssd

- name: Ensure services enabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=yes
  with_items:
    - sshd
    - docker
    - chronyd
    - certbot.timer
    - avahi-daemon

- name: Ensure transactional services enabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=yes
  with_items:
    - rebootmgr.service
    - transactional-update.timer
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists == True"

- name: Configure Fedora AUTH configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - pki/tls/certs/bh_ldap.crt
    - pam.d/password-auth-ac
    - pam.d/system-auth-ac
    - ssh/sshd_config
    - openldap/ldap.conf
  when: "ansible_os_family != 'Suse'"

- name: Configure SUSE AUTH configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    # Need to mkdir this?
    # - pam.d/common-account-pc
    # - pam.d/common-auth-pc
    # - pam.d/common-password-pc
    # - pam.d/common-session-pc
    # - ssh/sshd_config
    - openldap/ldap.conf
    # - nsswitch.conf
    - nscd.conf
    # - pki/tls/certs/bh_ldap.crt
  when: "ansible_os_family == 'Suse'"

- name: Fix SUSE sudoers
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0400
  with_items:
    - sudoers
  when: "ansible_os_family == 'Suse'"

- name: Server configurations
  include: server.yml
  when: "'htpc' not in group_names"

- name: Server Contain Configuration
  include: containers/main.yml
  when: "'htpc' not in group_names"

- name: Spotinuc
  include: spotinuc.yml
  when: "'htpc' in group_names"

- name: Backup Client
  include: borgbackup.yml
  when: "'DailySet1' in group_names"

