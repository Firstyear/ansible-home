# For converting to tumbleweed:
# rm /etc/zypp/repos.d/*.repo
# zypper ar -f -c http://download.opensuse.org/tumbleweed/repo/oss repo-oss
# zypper ar -f -c http://download.opensuse.org/tumbleweed/repo/non-oss repo-non-oss
# zypper ar -f -c http://download.opensuse.org/tumbleweed/repo/debug repo-debug
# zypper ar -f -c http://download.opensuse.org/update/tumbleweed/ repo-update
# zypper ar -f obs://home:firstyear:kanidm home_firstyear_kanidm
# zypper mr -f home_firstyear_kanidm
# zypper ref
#
# in nmcli
# set ipv6.addr-gen-mode  eui64

# certbot --test-cert certonly -m william@blackhats.net.au --manual --preferred-challenges=dns --manual-public-ip-logging-ok --agree-tos -d test-cert.net.blackhats.net.au
# After the DNS challenge is done, then all good to go

- name: Detect if we are transactional SUSE install
  become: yes
  stat: path=/usr/sbin/transactional-update
  register: trans_suse
  tags:
    - nrpe
    - docker

- name: Setup serial grub console on virtual transactional servers
  become: yes
  template: src=base/grub dest=/etc/default/grub owner=root group=root mode=0644
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists == True and ansible_virtualization_role == 'guest'"

- name: sysctl for atomic hosts
  template: src=base/sysctl/{{ item }} dest=/etc/sysctl.d/{{ item }} owner=root group=root mode=0644
  become: yes
  with_items:
    - 01-uofa.conf

# UPS monitoring
- name: UPS
  become: yes
  template: src=base/apcupsd.conf dest=/etc/apcupsd/apcupsd.conf owner=root group=root mode=0644
  when: "'mion' in inventory_hostname"
  tags:
    - apcupsd

# Add systemd-netlogd when more confident later.
# transactional-update pkg install nrpe yast2-network tmux docker zsh ipcalc python3-docker avahi borgbackup kanidm-clients kanidm-unixd-clients nmap tcpdump iotop avahi-utils conntrack-tools 
# libvirt-daemon qemu-kvm 
# zfs zfs-kmp-default 
# bridge-utils apcupsd monitoring-plugins-apcupsd libvirt-client libvirt-daemon-qemu virt-install
#
#
- name: Configure SUSE packages
  become: yes
  ignore_errors: yes
  zypper:
    name: ['tmux', 'docker', 'zsh', 'ipcalc', 'python3-docker', 'mozilla-nss-tools', 'avahi', 'borgbackup', 'kanidm-clients', 'kanidm-unixd-clients', 'nmap', 'tcpdump', 'clatd', 'sudo', 'system-group-wheel']
    state: present
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists == False"

- name: Fix SUSE admin groups
  become: yes
  ignore_errors: yes
  user: name=admin groups=wheel append=yes

- name: Configure Kanidm configuration
  become: yes
  template: src=base/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0444
  with_items:
    - kanidm/config
    - kanidm/unixd
  tags:
    - kanidm_client

- name: Configure kanidm unixd service enabled
  become: yes
  service: name=kanidm-unixd enabled=yes state=started
  tags:
    - kanidm_client

- name: Configure secure kanidm configurations
  become: yes
  template: src=base/kanidm/{{ item }} dest=/etc/sudoers.d/{{ item }} owner=root group=root mode=0600
  with_items:
    - net_admins-sudo
    - nrpe-sudo
  tags:
    - kanidm_client

- name: Configure Kanidm ssh configuration
  become: yes
  template: src=base/kanidm/{{ item }} dest=/etc/ssh/{{ item }} owner=root group=root mode=0644
  with_items:
    - sshd_config
  tags:
    - kanidm_client
  notify: restart sshd

- meta: flush_handlers

- name: Configure Kanidm unixd configuration
  become: yes
  template: src=base/kanidm/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - pam.d/common-password
    - pam.d/common-session
    - pam.d/common-auth
    - pam.d/common-account
    - nsswitch.conf
  tags:
    - kanidm_client

- name: Remove admin ssh keys if they exist
  become: yes
  file: path=/home/admin/.ssh/authorized_keys state=absent

# This breaks some applications on suse if we ensure it, make sure we DONT have it I guess ...
- name: Ensure tls/certs directory removed
  become: yes
  file: state=absent path=/etc/pki/tls/certs

- name: Configure hostname
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - hostname
  when: "inventory_hostname != 'localhost'"

- name: Push SSCA script to all hosts
  become: yes
  template: src=../../scripts/ssca.py dest=/root/ssca.py owner=root group=root mode=0755

- name: Configure systemd netlogd
  become: yes
  template: src=base/systemd-netlogd.conf dest=/etc/systemd-netlogd.conf owner=root group=root mode=0644

- name: Ensure services disabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=no
  with_items:
    - nfs-client.target
    - certmonger
    - ntpd
    - nscd
    - firewalld
    - sssd
    - zfs-share

- name: Ensure services enabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=yes
  with_items:
    - sshd
    - docker
    - chronyd
    - certbot.timer
    - avahi-daemon

- name: Transactional Monitoring Config
  become: yes
  ignore_errors: yes
  template: src=nagios/{{ item }} dest=/etc/nrpe.d/{{ item }} owner=root group=root mode=0644
  with_items:
    - allow.cfg
    - trans.cfg
  tags:
    - nrpe
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists == True"

- name: Ensure transactional services enabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=yes
  with_items:
    - rebootmgr.service
    - transactional-update.timer
    - nrpe.service
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists == True"

# When we aren't transactional, we still want auto updates though.
# Note, that mion is transactional, so this won't accidentally capture that.
- name: Push systemd unit files
  become: yes
  template: src=base/systemd/{{ item }} dest=/etc/systemd/system/{{ item }} owner=root group=root mode=0644
  with_items:
    - zypperupdate.service
    - zypperupdate.timer
  notify: daemon-reload
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists != True"

- meta: flush_handlers

- name: Ensure zypper update services enabled
  become: yes
  ignore_errors: yes
  service: name={{ item }} enabled=yes
  with_items:
    - zypperupdate.timer
  when: "ansible_os_family == 'Suse' and trans_suse.stat.exists != True"

- name: Configure SUSE AUTH configurations
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644
  with_items:
    - nscd.conf
  when: "ansible_os_family == 'Suse'"

- name: Fix SUSE sudoers
  become: yes
  template: src=../../templates/auth/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0400
  with_items:
    - sudoers
  when: "ansible_os_family == 'Suse'"

- name: ZFS configuration
  include: zfs.yml
  when: "'mion' in inventory_hostname"

- name: Server Container Configuration
  include: containers/main.yml
  when: "'container' in group_names"

- name: Monitoring
  include: nagios.yml
  when: "'topaz' in inventory_hostname"

- name: Backup Client
  include: borgbackup.yml
  when: "'DailySet1' in group_names"

- name: Mail Router
  include: mailrouter.yml
  when: "'email_relay_servers' in group_names"

- name: Blog Server
  include: blog.yml
  when: "'blog_servers' in group_names"
