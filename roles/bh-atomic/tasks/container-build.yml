
- name: deploy ca.certs
  become: yes
  action: copy src=../../templates/docker/certs.d/registry.blackhats.net.au dest=/etc/docker/certs.d/

- name: Update centos images
  become: yes
  docker_image:
    name: centos:7
    nocache: yes
  tags:
    - nextcloud
    - radiusd
    - samba
    - unifi
    - vsftpd

- name: Update suse base images
  become: yes
  docker_image:
    name: opensuse/tumbleweed:latest
    nocache: yes
  tags:
    - lifx
    - squid

- name: Build squid container
  become: yes
  docker_image:
    path: containers/squid/
    name: registry.blackhats.net.au/squid
    tag: latest
    pull: yes
    push: yes
    nocache: yes
    force: yes
  tags:
    - squid

# Really should check for if the file exists ....

# - name: download unifi software
#   become: yes
#   get_url: url=http://dl.ubnt.com/unifi/5.4.16/UniFi.unix.zip dest=containers/unifi/ mode=0600
#   tags:
#     - unifi

- name: Build unifi container
  become: yes
  docker_image:
    path: containers/unifi/
    name: registry.blackhats.net.au/unifi
    tag: latest
    pull: yes
    push: yes
    nocache: yes
    force: yes
  tags:
    - unifi

- name: Inject auth templates for samba
  become: yes
  template: src={{ item.src }} dest=containers/samba/{{ item.dest }} owner=root group=root mode=0640
  with_items:
    - { src: '../../templates/auth/sssd/sssd.conf', dest: 'sssd.conf' }
    - { src: '../../templates/auth/pki/tls/certs/bh_ldap.crt', dest: 'bh_ldap.crt' }
    - { src: '../../templates/auth/nsswitch.conf', dest: 'nsswitch.conf' }
  tags:
    - samba
    - auth_t

- name: Build samba container
  become: yes
  docker_image:
    path: containers/samba/
    name: registry.blackhats.net.au/samba
    tag: latest
    pull: yes
    push: yes
    nocache: yes
    force: yes
  tags:
    - samba
    - auth_t


- name: Inject auth templates for nextcloud
  become: yes
  template: src={{ item.src }} dest=containers/nextcloud/{{ item.dest }} owner=root group=root mode=0640
  with_items:
    - { src: '../../templates/auth/pki/tls/certs/bh_ldap.crt', dest: 'bh_ldap.crt' }
    - { src: '../../templates/auth/openldap/ldap.conf', dest: 'ldap.conf' }
  tags:
    - nextcloud
    - auth_t

- name: Build nextcloud container
  become: yes
  docker_image:
    path: containers/nextcloud/
    name: registry.blackhats.net.au/nextcloud
    tag: latest
    pull: yes
    push: yes
    nocache: yes
    force: yes
  tags:
    - nextcloud
    - auth_t

# - name: Inject auth templates for vsftpd
#   become: yes
#   template: src={{ item.src }} dest=containers/vsftpd/{{ item.dest }} owner=root group=root mode=0640
#   with_items:
#     - { src: '../../templates/auth/sssd/sssd.conf', dest: 'sssd.conf' }
#     - { src: '../../templates/auth/pki/tls/certs/bh_ldap.crt', dest: 'bh_ldap.crt' }
#     - { src: '../../templates/auth/nsswitch.conf', dest: 'nsswitch.conf' }
#   tags:
#     - vsftpd
#     - auth_t

# - name: Build vsftpd container
#   become: yes
#   docker_image:
#     path: containers/vsftpd/
#     name: registry.blackhats.net.au/vsftpd
#     tag: latest
#     pull: yes
#     push: yes
#     nocache: yes
#     force: yes
#   tags:
#     - vsftpd
#     - auth_t

- name: Inject auth templates for radiusd
  become: yes
  template: src={{ item.src }} dest=containers/radiusd/{{ item.dest }} owner=root group=root mode=0640
  with_items:
    # - { src: '../../templates/auth/sssd/sssd.conf', dest: 'sssd.conf' }
    - { src: '../../templates/auth/pki/tls/certs/bh_ldap.crt', dest: 'bh_ldap.crt' }
    # - { src: '../../templates/auth/nsswitch.conf', dest: 'nsswitch.conf' }
  tags:
    - radiusd
    - auth_t

- name: Build radiusd container
  become: yes
  docker_image:
    path: containers/radiusd/
    name: registry.blackhats.net.au/radiusd
    tag: latest
    pull: yes
    push: yes
    nocache: no
    force: yes
  tags:
    - radiusd
    - auth_t

- name: Build lifx container
  become: yes
  docker_image:
    path: containers/lifx/
    name: registry.blackhats.net.au/lifx
    tag: latest
    pull: yes
    push: yes
    nocache: yes
    force: yes
  tags:
    - lifx

- name: Build samba_rwdc container
  become: yes
  docker_image:
    path: containers/samba_rwdc/
    name: registry.blackhats.net.au/samba_rwdc
    tag: latest
    pull: yes
    push: yes
    nocache: yes
    force: yes
  tags:
    - samba_rwdc

