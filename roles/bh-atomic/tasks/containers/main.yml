
# - name: deploy ca.certs
#   become: yes
#   ignore_errors: yes
#   action: copy src=../../templates/docker/certs.d/registry.blackhats.net.au dest=/etc/docker/certs.d/
# 
# - name: Deploy the setup cert script
#   template: src=base/scripts/{{ item }} dest=/etc/docker/certs.d/registry.blackhats.net.au/{{ item }} owner=root group=root mode=0750
#   become: yes
#   with_items:
#     - docker-csr.sh

# Give every host an ipv6 nat setup
- name: deploy daemon.json
  become: yes
  template: src=base/docker/daemon.json dest=/etc/docker/daemon.json owner=root group=root mode=0640
  tags:
    - docker
    - ipv6nat


##### There is a set of sysctls you need.
#
# # Only needed if you don't have static ip
# net.ipv6.conf.enp1s0.accept_ra = 2
#
# net.ipv6.conf.all.forwarding = 1
# net.ipv6.conf.default.forwarding = 1
#

- name: sysctl for docker servers
  template: src=base/sysctl/{{ item }} dest=/etc/sysctl.d/{{ item }} owner=root group=root mode=0644
  become: yes
  with_items:
    - 80-atomic.conf
  when: "'linode_servers' not in group_names"
  tags:
    - docker
    - ipv6nat


#     - 70-yast.conf

#### Remember that anything that uses an expose DOESN'T need ipv6, and the ipv6nat
# is really for building/host mode/other routing

# Add an ipv6nat capable daemon.json.
- name: Create ipv6nat infra
  become: true
  docker_container:
    name: ipv6nat
    image: robbertkl/ipv6nat:latest
    network_mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/lib/modules:/lib/modules:ro"
    restart_policy: always
    pull: yes
    log_driver: journald
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
      - NET_RAW
  when: "'pyrite' in inventory_hostname"
  tags:
    - docker
    - ipv6nat

# Configure redis with persistent for pyrite scc caching.
- name: Create redis persistence volume
  become: true
  docker_volume:
    name: redis_data
  when: "'pyrite' in inventory_hostname"
  tags:
    - docker
    - redis

- name: Create redis server
  become: true
  docker_container:
    name: sccache_redis
    image: redis:6
    restart_policy: unless-stopped
    pull: yes
    user: 1009:1009
    memory: 2048M
    # purge_networks: yes
    ports:
      - "6379:6379"
    log_driver: journald
    volumes:
      - "redis_data:/data"
    command: "redis-server --bind 0.0.0.0 --port 6379 --protected-mode no --save 300 10 --maxmemory 1536mb --maxmemory-policy allkeys-lru"
  when: "'pyrite' in inventory_hostname"
  tags:
    - docker
    - redis


- include: manage_mion.yml
  when: "'mion' in inventory_hostname"

