
#TODO: This should check if the host is enrolled
#ipa host-show ${1}.${DOMAINNAME}
#if [ $? -eq 0 ]
#then
#    ipa host-del ${1}.${DOMAINNAME} --updatedns
#fi
#
#ipa host-add ${1}.${DOMAINNAME} --force --no-reverse --password=${HOSTPASS}

# How do we get a kinit to make this work?
#- name: prepare ipa host
#  action: shell

# Make sure our filesystem is laid out as we need
- name: create boot path
  sudo: yes
  action: file state=directory path=/var/lib/tftpboot/centos/{{ centos_version }}/
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: download boot kernel
  sudo: yes
  action: get_url url=http://mirror.internode.on.net/pub/centos/{{ centos_version }}/os/x86_64/images/pxeboot/vmlinuz dest=/var/lib/tftpboot/centos/{{ centos_version }}/
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: download boot initrd.img
  sudo: yes
  action: get_url url=http://mirror.internode.on.net/pub/centos/{{ centos_version }}/os/x86_64/images/pxeboot/initrd.img dest=/var/lib/tftpboot/centos/{{ centos_version }}/
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: download boot upgrade.img
  sudo: yes
  action: get_url url=http://mirror.internode.on.net/pub/centos/{{ centos_version }}/os/x86_64/images/pxeboot/upgrade.img dest=/var/lib/tftpboot/centos/{{ centos_version }}/
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: create ks path
  sudo: yes
  action: file state=directory path=/var/www/html/ks/{{ inventory_hostname }}/
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

- name: config template kickstart
  sudo: yes
  action: template src=ks.conf dest=/var/www/html/ks/{{ inventory_hostname }}/ks.conf
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

# Later we need a way to get the macaddr of the ovirt host.
# This way we can do per host config

- name: config tftp menu
  sudo: yes
  action: template src=default dest=/var/lib/tftpboot/pxelinux.cfg/default
  delegate_to: "{{ item }}"
  with_items: groups.deployment_servers

# This will PXE boot, build and STOP the instance
- name: ovirt launch instance
  local_action: ovirt
    state=started
    instance_name={{ inventory_hostname }}
    user={{ ovirt_admin_username }}
    password={{ ovirt_admin_password }}
    url=https://mion.ipa.blackhats.net.au

