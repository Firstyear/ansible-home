##### DANGER DANGER DANGER
# Selinux doesnt allow containers to access the default volumes location, so set policy to permissive!!!!
- name: set containers to permissive
  become: yes
  action: selinux_permissive name=svirt_lxc_net_t permissive=true

# Create the docker folders
- name: create docker folders
  become: yes
  file: path=/root/docker/{{ item }} state=directory owner=root group=root mode=0750
  with_items:
    # - amanda_client
    - centos_sshd
    - squid
    - samba

# Deploy the container dockerfiles.
- name: deploy docker templates
  become: yes
  template: src={{ item }} dest=/root/docker/{{ item }} owner=root group=root mode=0640
  with_items:
    # - amanda_client/amanda-log.conf
    # - amanda_client/amandahosts
    # - amanda_client/backup-pubkey.pem
    # - amanda_client/Dockerfile
    # - amanda_client/exclude
    - centos_sshd/Dockerfile
    - centos_sshd/sssd-log.conf
    - squid/Dockerfile
    - squid/squid.conf
    - squid/squid-log.conf
    - samba/Dockerfile
    - samba/smb.conf
    - samba/sssd-log.conf

- name: deploy bh auth templates for centosSSH
  become: yes
  template: src={{ item.src }} dest=/root/docker/centos_sshd/{{ item.dest }} owner=root group=root mode=0640
  with_items:
    - { src: '../../templates/auth/sssd/sssd.conf', dest: 'sssd.conf' }
    - { src: '../../templates/auth/sudoers.d/bh_admins-sudo', dest: 'bh_admins-sudo' }
    - { src: '../../templates/auth/pki/tls/certs/bh_ldap.crt', dest: 'bh_ldap.crt' }
    - { src: '../../templates/auth/pam.d/password-auth-ac', dest: 'password-auth-ac' }
    - { src: '../../templates/auth/pam.d/system-auth-ac', dest: 'system-auth-ac' }
    - { src: '../../templates/auth/ssh/sshd_config', dest: 'sshd_config' }
    - { src: '../../templates/auth/nsswitch.conf', dest: 'nsswitch.conf' }

- name: deploy bh auth templates for samba
  become: yes
  template: src={{ item.src }} dest=/root/docker/samba/{{ item.dest }} owner=root group=root mode=0640
  with_items:
    - { src: '../../templates/auth/sssd/sssd.conf', dest: 'sssd.conf' }
    - { src: '../../templates/auth/pki/tls/certs/bh_ldap.crt', dest: 'bh_ldap.crt' }
    - { src: '../../templates/auth/nsswitch.conf', dest: 'nsswitch.conf' }

- name: Build docker latest images
  become: yes
  docker_image:
    path: /root/docker/{{ item }}
    name: "{{ item }}"
    tag: latest
    push: no
    nocache: yes
    force: yes
  with_items:
    # - amanda_client
    - squid
    - samba

- name: Build docker 7 images
  become: yes
  docker_image:
    path: /root/docker/{{ item }}
    name: "{{ item }}"
    tag: 7
    push: no
    nocache: yes
    force: no
  with_items:
    - centos_sshd

- name: Create volumes
  become: yes
  file: path=/var/lib/docker/volumes/{{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - nabina/home
    - nabina/opt
    - samba/data
    - samba/private

- name: Create squid volumes
  become: yes
  file: path=/var/lib/docker/volumes/{{ item }} state=directory owner=23 group=23 mode=0775
  with_items:
    - squid/cache/

# - name: Enable amanda container
#   become: yes
#   template: src=container.service dest=/etc/systemd/system/amanda_client.service owner=root group=root mode=0644
#   vars:
#     container_name: amanda_client
#     container_image: amanda_client
#     container_opts: --privileged=true -v /:/sysroot --network=v6br --ip6={{ docker_v6_prefix }}:1::2
# 
- name: Enable squid container
  become: yes
  template: src=container.service dest=/etc/systemd/system/squid.service owner=root group=root mode=0644
  vars:
    container_name: squid
    container_image: squid
    container_opts: -v /var/lib/docker/volumes/squid/cache:/var/spool/squid -p 3128:3128

- name: Enable samba container
  become: yes
  template: src=container.service dest=/etc/systemd/system/samba.service owner=root group=root mode=0644
  vars:
    container_name: samba
    container_image: samba
    container_opts: -v /var/lib/docker/volumes/samba/data:/data -v /var/lib/docker/volumes/samba/private:/var/lib/samba/private -p 445:445

- name: Enable nabina container
  become: yes
  template: src=container-create.service dest=/etc/systemd/system/nabina.service owner=root group=root mode=0644
  vars:
    container_name: nabina
    container_image: centos_sshd:7
    container_opts: --privileged=true -v /var/lib/docker/volumes/nabina/home:/home -v /var/lib/docker/volumes/nabina/opt:/opt --network=v6br --ip6={{ docker_v6_prefix }}:1::3

- name: Ensure containers
  become: yes
  service: name={{ item }} enabled=yes state=started
  with_items:
    # - amanda_client
    - squid
    - nabina

