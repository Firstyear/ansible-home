# Create the docker folders
- name: create docker folders
  become: yes
  file: path=/root/docker/{{ item }} state=directory owner=root group=root mode=0750
  with_items:
    - centos_sshd

# Deploy the container dockerfiles.
- name: deploy docker templates
  become: yes
  template: src={{ item }} dest=/root/docker/{{ item }} owner=root group=root mode=0640
  with_items:
    - centos_sshd/Dockerfile
    - centos_sshd/sssd-log.conf

- name: deploy bh auth templates for centosSSH
  become: yes
  template: src={{ item.src }} dest=/root/docker/centos_sshd/{{ item.dest }} owner=root group=root mode=0640
  with_items:
    - { src: '../../templates/auth/sssd/sssd.conf', dest: 'sssd.conf' }
    - { src: '../../templates/auth/sudoers.d/bh_admins-sudo', dest: 'bh_admins-sudo' }
    - { src: '../../templates/auth/pki/tls/certs/bh_ldap.crt', dest: 'bh_ldap.crt' }
    - { src: '../../templates/auth/pam.d/password-auth-ac', dest: 'password-auth-ac' }
    - { src: '../../templates/auth/pam.d/system-auth-ac', dest: 'system-auth-ac' }
    - { src: '../../templates/auth/ssh/sshd_config', dest: 'sshd_config' }
    - { src: '../../templates/auth/nsswitch.conf', dest: 'nsswitch.conf' }
    - { src: '../../templates/auth/openldap/ldap.conf', dest: 'ldap.conf' }

- name: Build docker 7 images
  become: yes
  docker_image:
    path: /root/docker/{{ item }}
    name: "{{ item }}"
    tag: 7
    push: no
    nocache: yes
    force: yes
  with_items:
    - centos_sshd

- name: Create volumes
  become: yes
  file: path=/var/lib/docker/volumes/{{ item }} state=directory owner=root group=root mode=0777
  with_items:
    - nabina/home
    - nabina/opt

- name: Enable nabina container
  become: yes
  template: src=container-create.service dest=/etc/systemd/system/nabina.service owner=root group=root mode=0644
  vars:
    container_name: nabina
    container_image: centos_sshd:7
    container_opts: --privileged=true -v /var/lib/docker/volumes/nabina/home:/home -v /var/lib/docker/volumes/nabina/opt:/opt --network=v6br --ip6={{ docker_v6_prefix }}:1::3
  when: "'emerald' in inventory_hostname"

- name: Ensure containers
  become: yes
  service: name={{ item }} enabled=yes state=started
  with_items:
    - nabina


