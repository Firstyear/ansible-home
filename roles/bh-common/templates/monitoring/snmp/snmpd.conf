
agentaddress tcp6:161

####
# First, map the community name "public" into a "security name"

#       sec.name  source          community
com2sec6 notConfigUser  ::1/128       public
com2sec6 notConfigUser  2001:44b8:2155:2c00::/56       public

####
# Second, map the security name into a group name:

#       groupName      securityModel securityName
group   notConfigGroup v1           notConfigUser
group   notConfigGroup v2c           notConfigUser

####
# Third, create a view for us to let the group have rights to:

# Make at least  snmpwalk -v 1 localhost -c public system fast again.
#       name           incl/excl     subtree         mask(optional)
view    systemview    included   .1.3.6.1.2.1.1
view    systemview    included   .1.3.6.1.2.1.25.1.1
view    systemview    included   .1.3.6.1.4.1.2021.2
view    systemview    included   .1.3.6.1.4.1.2021.9
view    systemview    included   .1.3.6.1.4.1.2021.10

####
# Finally, grant the group read-only access to the systemview view.

#       group          context sec.model sec.level prefix read   write  notif
access  notConfigGroup ""      any       noauth    exact  systemview none none


###############################################################################
# System contact information
#

# It is also possible to set the sysContact and sysLocation system
# variables through the snmpd.conf file:

syslocation Brisbane
syscontact Blackhats <william@blackhats.net.au>

# Example output of snmpwalk:
#   % snmpwalk -v 1 localhost -c public system

###############################################################################
# Logging
#

# We do not want annoying "Connection from UDP: " messages in syslog.
# If the following option is commented out, snmpd will print each incoming
# connection, which can be useful for debugging.

dontLogTCPWrappersConnects yes

# -----------------------------------------------------------------------------


###############################################################################
# Process checks.


proc audispd
proc sssd


#  Make sure there are no more than 4 ntalkds running, but 0 is ok too.
#proc ntalkd 4

#  Make sure at least one sendmail, but less than or equal to 10 are running.
#proc sendmail 10 1

#  A snmpwalk of the process mib tree would look something like this:
# 
# % snmpwalk -v 1 localhost -c public .1.3.6.1.4.1.2021.2


###############################################################################
# disk checks
#

disk / 10%
disk /boot 10%
disk /usr 10%
disk /tmp 10%
disk /var 10%
disk /var/log 10%
disk /var/lib 10%
disk /home 10%

# % snmpwalk -v 1 localhost -c public .1.3.6.1.4.1.2021.9

###############################################################################
# load average checks
#

# load [1MAX=12.0] [5MAX=12.0] [15MAX=12.0]
#
# 1MAX:   If the 1 minute load average is above this limit at query
#         time, the errorFlag will be set.
# 5MAX:   Similar, but for 5 min average.
# 15MAX:  Similar, but for 15 min average.

# Check for loads:
load 2 4 4

# % snmpwalk -v 1 localhost -c public .1.3.6.1.4.1.2021.10


###############################################################################
# Further Information
#
#  See the snmpd.conf manual page, and the output of "snmpd -H".
#


## Look at logMatch

## do a sh to ldap?

###############################################################################
# ROLE SPECIFIC CHECKS HERE
#
## These change in the ansible template based on machine role!

# {{ group_names }}
{% if 'freeipa_servers' in group_names %}
proc ns-slapd
proc named-pkcs11
proc kadmind
proc krb5kdc
{% endif %}

{% if 'amanda_servers' in group_names %}
# No need to monitor amanda procs
disk /var/lib/amanda/ManualSet 10%
disk /var/lib/amanda/DailySet1 10%
disk /var/lib/amanda 10%
{% endif %}

{% if 'blog_servers' in group_names %}
proc httpd
{% endif %}

{% if 'deyloyment_servers' in group_names %}
proc squid
{% endif %}

{% if 'email_servers' in group_names %}
proc postfix
proc dovecot
{% endif %}

{% if 'email_relay_servers' in group_names %}
proc postfix
proc named
{% endif %}

{% if 'nfs_servers' in group_names %}
proc smbd
{% endif %}



